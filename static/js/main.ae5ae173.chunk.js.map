{"version":3,"sources":["data/posts.js","redux/reducer.js","Components/Photo.js","Components/Gallery.js","Components/Addphoto.js","Components/Comments.js","Components/Single.js","Components/Main.js","database/config.js","redux/actions.js","Components/App.js","index.js"],"names":["posts","rootReducer","combineReducers","comments","state","arguments","length","undefined","action","type","postId","Object","objectSpread","defineProperty","toConsumableArray","concat","comment","_posts","slice","index","post","Photo","props","react_default","a","createElement","className","Link","to","id","src","imageLink","alt","description","onClick","removingPosts","history","push","Gallery","sort","x","y","map","Components_Photo","assign","key","Addphoto","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","event","preventDefault","target","elements","link","value","Number","Date","startAddingPost","onHistory","onSubmit","placeholder","name","Component","Comments","startAddingComment","hidden","Single","_this$props","match","params","find","findIndex","Components_Comments","Main","uploadPosts","startLoadingComments","Route","exact","path","render","Components_Gallery","_ref","Components_Addphoto","Components_Single","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","dispatch","ref","update","then","addPosts","catch","error","console","log","once","snapshot","forEach","childSnapshot","val","loadPosts","values","loadComments","remove","removePosts","addComment","App","withRouter","connect","bindActionCreators","actions","store","createStore","applyMiddleware","thunk","ReactDOM","es","BrowserRouter","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.ae5ae173.chunk.js","sourcesContent":["const posts = [];\nexport default posts;\n","import _posts from \"../data/posts\";\nimport { combineReducers } from \"redux\";\n\nfunction comments(state = {}, action) {\n  switch (action.type) {\n    case \"ADD_COMMENT\":\n      if (!state[action.postId]) {\n        return { ...state, [action.postId]: [action.comment] };\n      } else {\n        return {\n          ...state,\n          [action.postId]: [...state[action.postId], action.comment]\n        };\n      }\n\n    default:\n      return state;\n    case \"LOAD_COMMENTS\":\n      return action.comments;\n  }\n}\nfunction posts(state = _posts, action) {\n  switch (action.type) {\n    case \"REMOVE_POST\":\n      return [\n        ...state.slice(0, action.index),\n        ...state.slice(action.index + 1)\n      ];\n    case \"ADD_POST\":\n      return [...state, action.post];\n    default:\n      return state;\n    case \"LOAD_PHOTOS\":\n      return action.posts;\n  }\n}\nconst rootReducer = combineReducers({ comments, posts });\nexport default rootReducer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nfunction Photo(props) {\n  const post = props.post;\n  return (\n    <figure className=\"figure\">\n      <Link to={`/single/${post.id}`}>\n        {\" \"}\n        <img className=\"photo\" src={post.imageLink} alt={post.description} />\n      </Link>\n      <figcaption>\n        <p> {post.description} </p>\n      </figcaption>\n      <div className=\"button-container\">\n        <button\n          onClick={() => {\n            props.removingPosts(props.index, post.id);\n            props.history.push(\"/\");\n          }}\n        >\n          {\" \"}\n          Remove{\" \"}\n        </button>\n        <Link className=\"comment-button\" to={`/single/${post.id}`}>\n          <div className=\"comment-count\">\n            <div className=\"speech-bubble\"> </div>\n            {props.comments[post.id] ? props.comments[post.id].length : 0}\n          </div>\n        </Link>\n      </div>\n    </figure>\n  );\n}\nPhoto.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default Photo;\n","import React from \"react\";\nimport Photo from \"./Photo\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nfunction Gallery(props) {\n  return (\n    <div>\n      <Link to=\"/AddPhoto\" className=\"add-button\" />\n      {/* <button className=\"add-button\" onClick={props.onNavigate} /> */}\n      <div className=\"photo-grid\">\n        {props.posts\n          .sort(function(x, y) {\n            return y.id - x.id;\n          })\n          .map((post, index) => (\n            <Photo key={index} post={post} {...props} index={index} />\n          ))}\n      </div>\n    </div>\n  );\n}\nGallery.propTypes = {\n  posts: PropTypes.array.isRequired,\n  onRemovePhoto: PropTypes.func.isRequired\n};\n\nexport default Gallery;\n","import React, { Component } from \"react\";\n\nclass Addphoto extends Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const imageLink = event.target.elements.link.value;\n    const description = event.target.elements.description.value;\n    const post = {\n      id: Number(new Date()),\n      description: description,\n      imageLink: imageLink\n    };\n    if (description && imageLink) {\n      this.props.startAddingPost(post);\n      this.props.onHistory.push(\"/\");\n    }\n  }\n  render() {\n    return (\n      <div>\n        <h2>Upload to Gallery</h2>;\n        <div className=\"form\">\n          <form onSubmit={this.handleSubmit}>\n            <input type=\"text\" placeholder=\"Link\" name=\"link\" />\n            <input type=\"text\" placeholder=\"description\" name=\"description\" />\n            <button>Upload</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Addphoto;\n","import React, { Component } from \"react\";\n\nclass Comments extends Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const comment = event.target.elements.comment.value;\n    this.props.startAddingComment(comment, this.props.id);\n    event.target.elements.comment.value = \"\";\n  }\n  render() {\n    return (\n      <div className=\"comment\">\n        {this.props.comments.map((comment, index) => {\n          return <p key={index}>{comment}</p>;\n        })}\n\n        <form className=\"comment-form\" onSubmit={this.handleSubmit}>\n          <input type=\"text\" placeholder=\"comment\" name=\"comment\" />\n          <input type=\"submit\" hidden />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Comments;\n","import React, { Component } from \"react\";\nimport Photo from \"./Photo\";\nimport Comments from \"./Comments\";\n\nclass Single extends Component {\n  render() {\n    const { match, posts } = this.props;\n    const id = Number(match.params.id);\n    const post = posts.find(post => post.id === id);\n    const comments = this.props.comments[match.params.id] || [];\n\n    const index = this.props.posts.findIndex(post => post.id === id);\n    return (\n      <div className=\"single-photo\">\n        <Photo post={post} {...this.props} index={index} />\n        <Comments\n          startAddingComment={this.props.startAddingComment}\n          comments={comments}\n          id={id}\n        />\n      </div>\n    );\n  }\n}\nexport default Single;\n","import React, { Component } from \"react\";\n\nimport Gallery from \"./Gallery\";\nimport Addphoto from \"./Addphoto\";\nimport { Route, Link } from \"react-router-dom\";\nimport Single from \"./Single\";\n\nclass Main extends Component {\n  componentDidMount() {\n    this.props.uploadPosts();\n    this.props.startLoadingComments();\n  }\n  render() {\n    return (\n      <div>\n        <h1>\n          <Link to=\"/\">Socio-Gallery</Link>\n        </h1>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <div>\n              <Gallery {...this.props} />\n\n              {/* <Gallery\n                posts={this.state.posts}\n                onRemovePhoto={this.removePhoto}\n                onNavigate={this.navigate}\n              /> */}\n            </div>\n          )}\n        />\n\n        <Route\n          path=\"/AddPhoto\"\n          render={({ history }) => (\n            <Addphoto {...this.props} onHistory={history} />\n          )}\n        />\n        <Route\n          path=\"/single/:id\"\n          render={params => <Single {...this.props} {...params} />}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import * as firebase from \"firebase\";\nvar config = {\n  apiKey: \"AIzaSyBYOTnoEp3VUzGFBb1pancBus-bJt5DjnY\",\n  authDomain: \"socioapp-e1362.firebaseapp.com\",\n  databaseURL: \"https://socioapp-e1362.firebaseio.com\",\n  projectId: \"socioapp-e1362\",\n  storageBucket: \"socioapp-e1362.appspot.com\",\n  messagingSenderId: \"893891613780\"\n};\n\nfirebase.initializeApp(config);\nconst database = firebase.database();\nexport { database };\n","import { database } from \"../database/config\";\n\nexport function startAddingPost(post) {\n  return dispatch => {\n    return database\n      .ref(\"posts\")\n      .update({ [post.id]: post })\n      .then(() => {\n        dispatch(addPosts(post));\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n}\nexport function uploadPosts(post) {\n  return dispatch => {\n    return database\n      .ref(\"posts\")\n      .once(\"value\")\n      .then(snapshot => {\n        let posts = [];\n        snapshot.forEach(childSnapshot => {\n          posts.push(childSnapshot.val());\n        });\n        dispatch(loadPosts(posts));\n      });\n  };\n}\nexport function startLoadingComments() {\n  return dispatch => {\n    return database\n      .ref(\"comment\")\n      .once(\"value\")\n      .then(snapshot => {\n        let comments = {};\n        snapshot.forEach(childSnapshot => {\n          comments[childSnapshot.key] = Object.values(childSnapshot.val());\n        });\n        dispatch(loadComments(comments));\n      });\n  };\n}\nexport function loadComments(comments) {\n  return {\n    type: \"LOAD_COMMENTS\",\n    comments\n  };\n}\nexport function removingPosts(index, id) {\n  return dispatch => {\n    return database\n      .ref(`posts/${id}`)\n      .remove()\n      .then(() => {\n        dispatch(removePosts(index));\n      });\n  };\n}\nexport function startAddingComment(comment, postId) {\n  return dispatch => {\n    return database\n      .ref(\"comment/\" + postId)\n      .push(comment)\n      .then(() => {\n        dispatch(addComment(comment, postId));\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n}\nexport function removePosts(index) {\n  return {\n    type: \"REMOVE_POST\",\n    index\n  };\n}\nexport function addPosts(post) {\n  return {\n    type: \"ADD_POST\",\n    post\n  };\n}\nexport function addComment(comment, postId) {\n  return {\n    type: \"ADD_COMMENT\",\n    comment,\n    postId\n  };\n}\nexport function loadPosts(posts) {\n  return {\n    type: \"LOAD_PHOTOS\",\n    posts\n  };\n}\n","import Main from \"./Main\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"../redux/actions\";\nimport { withRouter } from \"react-router\";\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts,\n    comments: state.comments\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n}\nconst App = withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Main)\n);\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/stylesheet.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport rootReducer from \"./redux/reducer\";\nimport { Provider } from \"react-redux\";\nimport App from \"./Components/App\";\nimport thunk from \"redux-thunk\";\nimport { database } from \"./database/config\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}